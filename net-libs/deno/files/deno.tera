{%- block header -%}
# Copyright {{ this_year }} Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

# Auto-Generated by cargo-ebuild {{ cargo_ebuild_ver }}
# Using template deno.tera
{% endblock %}
EAPI={%- block eapi -%}8{%- endblock %}

{% block crates -%}
CRATES="
{% for crate in crates -%}
{{ crate }}
{%- endfor -%}"
{%- endblock %}
CRATES+="${P}"
#NOTE: update deno.tera for long term changes
#To update: download deno crate from https://crates.io/api/v1/crates/${PN}/${PV}/download
#or https://github.com/denoland/deno/tree/main/cli
#Run cargo ebuild -T deno.tera
#possibly remove winapi windows-* crates
# - Nope maybe remove windows deps from the Cargo.{toml,lock} files?
#update postinstall for security warnings
#remove GN/NINJA vars?

inherit {% block inherit -%}cargo{%- endblock %} llvm multiprocessing check-reqs bash-completion-r1

DESCRIPTION="A modern runtime for JavaScript and TypeScript"
HOMEPAGE="https://deno.land/"
SRC_URI={%- block src_uri -%}{% raw -%}"$(cargo_crate_uris)"{%- endraw %}{%- endblock %}

# License set may be more restrictive as OR is not respected
# use cargo-license for a more accurate license picture

#Note webkit = 0BSD and a Chromium License
#     ring   = openssl SSLeay ISC MIT
#     webpki = ISC
LICENSE={%- block license -%}"{{ license }}"{%- endblock %}
SLOT={%- block slot -%}"0"{%- endblock %}
KEYWORDS={%- block keyword -%}"~amd64"{%- endblock %}
BDEPEND="
	sys-devel/llvm
	dev-util/gn
	dev-util/ninja
	>=virtual/rust-1.59.0
"
{% block variables -%}
{%- endblock %}

{%- block phases -%}
{%- endblock -%}
pkg_pretend() {
	#This used 3.5GB using 3750M for safety
	CHECKREQS_DISK_BUILD="3750M"
	check-reqs_pkg_pretend
	}

pkg_setup() {
	CHECKREQS_DISK_BUILD="3750M"
	check-reqs_pkg_setup
	}

src_prepare() {
	V8_DIR=""
	for CRATE in ${CRATES};do
		if [[ ${CRATE} =~ ^v8-[0-9] ]];then
			V8_DIR=${CRATE}
			break
		fi
	done
	pushd "${ECARGO_VENDOR}/${V8_DIR}" > /dev/null || die "V8 crate not found"
	eapply "${FILESDIR}/v8-0.43.1-lockfile.patch" \
		"${FILESDIR}/v8-0.42.0-disable-auto-ccache.patch" \
		"${FILESDIR}/v8-0.40.2-jobfix.patch"
	popd > /dev/null
	default
	}
src_compile() {
	export V8_FROM_SOURCE=1
	#export SCCACHE=
	#export CCACHE=
	export GN=${EPREFIX}/usr/bin/gn
	export NINJA=${EPREFIX}/usr/bin/ninja
	export CLANG_BASE_PATH=$(get_llvm_prefix)
	export NINJA_JOBS=$(makeopts_jobs)
	#GN_ARGS=
	cargo_src_compile --locked
	}
src_install() {
	cargo_src_install
	"${ED}/usr/bin/deno" completions bash > deno_bash_comp
	newbashcomp deno_bash_comp deno
	}
pkg_postinst(){
	:
	}

