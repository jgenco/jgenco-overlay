{%- block header -%}
# Copyright {{ this_year }} Gentoo Authors
# Distributed under the terms of the GNU General Public License v2

# Auto-Generated by cargo-ebuild {{ cargo_ebuild_ver }}
{% endblock %}
EAPI={%- block eapi -%}8{%- endblock %}

{% block crates -%}
CRATES="
{% for crate in crates -%}
{{ crate }}
{%- endfor -%}"
{%- endblock %}

inherit {% block inherit -%}cargo deno{%- endblock %}

DENO_LIBS=(
	"std@0.97.0 https://github.com/denoland/deno_std/archive/refs/tags/_VER_.tar.gz deno_std-_VER_ NA NA"
	"std@0.157.0 https://github.com/denoland/deno_std/archive/refs/tags/_VER_.tar.gz deno_std-_VER_ NA NA"
	"plug@1.0.0-rc.3 https://github.com/denosaurs/plug/archive/refs/tags/_VER_.tar.gz plug-_VER_ NA NA"
)

IUSE="test"
RESTRICT="!test? ( test )"
DESCRIPTION="Deno-DOM Plugin"
HOMEPAGE="https://deno.land/x/deno_dom"

MY_PV="$(ver_cut 1-4)-alpha-artifacts"
S=${WORKDIR}/${PN}-${MY_PV}

SRC_URI={%- block src_uri -%}{% raw -%}"${CARGO_CRATE_URIS}{%- endraw %}{%- endblock %}
	https://github.com/b-fuze/deno-dom/archive/refs/tags/v${MY_PV}.tar.gz -> deno-dom-${MY_PV}.tgz
	test? ( $(deno_build_src_uri) )"

# License set may be more restrictive as OR is not respected
# use cargo-license for a more accurate license picture
LICENSE={%- block license -%}"MIT {{ license }}"{%- endblock %}
SLOT={%- block slot -%}"0"{%- endblock %}
KEYWORDS={%- block keyword -%}"~amd64"{%- endblock %}
{% block variables %}
DEPEND=""
RDEPEND="${DEPEND}"
BDEPEND="
	test? (
		net-libs/deno
	)
"

# rust does not use *FLAGS from make.conf, silence portage warning
# update with proper path to binaries this crate installs, omit leading /
#QA_FLAGS_IGNORED="usr/$(get_libdir)/${PN}"
{% endblock %}

{%- block phases -%}
{%- endblock -%}
src_unpack() {
	cargo_src_unpack
	use test && deno_src_unpack
}
src_compile() {
	pushd html-parser/plugin > /dev/null || die
	cargo_src_compile
	popd > /dev/null || die
	cp target/release/libplugin.so ${PN}.so || die "Failed to copy file"

	#deno test --unstable -A  native.test.ts
	DENO_IMPORT_LIST="${FILESDIR}/deno-dom-${PV}.imports"
	use test && deno_build_src && deno_build_cache
}
src_install() {
	dolib.so ${PN}.so
}
src_test() {
	export DENO_DOM_PLUGIN=${S}/target/release/libplugin.so

	#standerdize to older std to 0.97.0
	sed -i -E "s#std@0.[0-9]{2}.0#std@0.97.0#" \
		test/wpt.ts test/wpt-runner.ts test/units.ts test/units/* ||
		die "Failed to modify std version"
	sed -i "s#https://deno.land/std/testing/asserts.ts#https://deno.land/std@0.97.0/testing/asserts.ts#" \
		test/units/comments-outside-html-test.ts || die "Failed to set std version"

	deno test --unstable -A  native.test.ts
	#Quoting README.md: WPT tests are still a WIP, passed tests likely haven't actually passed.
	#requires downloading a version of wpt @ https://github.com/web-platform-tests/wpt
	#replace ${S}/wpt
	#deno test --allow-read --allow-net wasm.test.ts -- --wpt
}
