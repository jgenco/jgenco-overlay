* This stops it from downloading dependencies.
* and Installing quarto (I think)
* When quarto is run(unbundled?) it checks to see if it needs 
be reconfigured.  It checks this by checking if two configuration
files are in agrement and checking the hash of the quarto file.
If not equal it start the configuration script.
I added the console.log to know if something was missed.
--- a/package/src/common/configure.ts
+++ b/package/src/common/configure.ts
@@ -42,23 +42,6 @@ export async function configure(
   info("******************************************");
   info("");
 
-  // Download dependencies
-  for (const dependency of kDependencies) {
-    try {
-      await configureDependency(dependency, config);
-    } catch (e) {
-      if (
-        e.message ===
-          "The architecture aarch64 is missing the dependency deno_dom"
-      ) {
-        info("\nIgnoring deno_dom dependency on Apple Silicon");
-        continue;
-      } else {
-        throw e;
-      }
-    }
-  }
-
   // Move the quarto script into place
   info("Creating Quarto script");
   if (Deno.build.os === "windows") {
@@ -67,12 +50,6 @@ export async function configure(
       join(config.directoryInfo.bin, "quarto.cmd"),
     );
   } else {
-    const out = join(config.directoryInfo.bin, "quarto");
-    Deno.copyFileSync(
-      join(config.directoryInfo.pkg, "scripts", "common", "quarto"),
-      out,
-    );
-    Deno.chmodSync(out, 0o755);
   }
 
   // record dev config. These are versions as defined in the root configuration file.
--- a/src/quarto.ts
+++ b/src/quarto.ts
@@ -56,8 +56,7 @@ export async function quarto(
     const installed = readInstalledDevConfig();
     const source = readSourceDevConfig();
     if (installed == null || !devConfigsEqual(installed, source)) {
-      await reconfigureQuarto(installed, source);
-      Deno.exit(1);
+      console.log("Quarto thinks it needs reconfigured");
     }
   }
 
