diff --git a/src/core/dart-sass.ts b/src/core/dart-sass.ts
index ca7cb1c..83eae46 100644
--- a/src/core/dart-sass.ts
+++ b/src/core/dart-sass.ts
@@ -6,13 +6,13 @@
 */
 import { join } from "path/mod.ts";
 
-import { toolsPath } from "./resources.ts";
+import { binaryPath } from "./resources.ts";
 import { execProcess } from "./process.ts";
 import { TempContext } from "./temp.ts";
 import { lines } from "./text.ts";
 
 export function dartSassInstallDir() {
-  return toolsPath("dart-sass");
+  return binaryPath("");
 }
 
 export async function dartSassVersion() {
@@ -51,7 +51,7 @@ export async function dartCompile(
 
 async function dartCommand(args: string[]) {
   const command = Deno.build.os === "windows" ? "sass.bat" : "sass";
-  const sass = toolsPath(join("dart-sass", command));
+  const sass = binaryPath(command);
   const cmd = [
     sass,
     ...args,
diff --git a/src/core/devconfig.ts b/src/core/devconfig.ts
index 28c8d71..d2d63c9 100644
--- a/src/core/devconfig.ts
+++ b/src/core/devconfig.ts
@@ -54,8 +54,7 @@ export function writeDevConfig(config: DevConfig, binPath: string) {
 }
 
 export function readInstalledDevConfig(): DevConfig | null {
-  const binPath = quartoConfig.binPath();
-  const configPath = join(binPath, "..", "config", kDevConfig);
+  const configPath = join(quartoConfig.basePath(), "package","dist", "config", kDevConfig);
   if (existsSync(configPath)) {
     return JSON.parse(Deno.readTextFileSync(configPath)) as DevConfig;
   } else {
@@ -81,13 +80,7 @@ export function readSourceDevConfig(): DevConfig {
     }
   };
 
-  const srcScriptPath = join(
-    quartoConfig.binPath(),
-    "..",
-    "..",
-    "scripts",
-    isWindows() ? "windows" : "common",
-  );
+  const srcScriptPath = quartoConfig.binPath();
   return createDevConfig(
     readConfig("DENO"),
     readConfig("DENO_DOM"),
diff --git a/src/core/esbuild.ts b/src/core/esbuild.ts
index 4f5c2c6..08e9f11 100644
--- a/src/core/esbuild.ts
+++ b/src/core/esbuild.ts
@@ -6,7 +6,7 @@
 */
 
 import { execProcess } from "./process.ts";
-import { toolsPath } from "./resources.ts";
+import { binaryPath } from "./resources.ts";
 
 export async function esbuildCompile(
   input: string,
@@ -30,7 +30,7 @@ async function esbuildCommand(
   workingDir: string,
 ) {
   const cmd = [
-    toolsPath("esbuild"),
+    binaryPath("esbuild"),
     ...args,
   ];
 
diff --git a/src/core/quarto.ts b/src/core/quarto.ts
index a95f511..4bed3cc 100644
--- a/src/core/quarto.ts
+++ b/src/core/quarto.ts
@@ -18,6 +18,7 @@ export interface QuartoConfig {
 }
 
 export const quartoConfig = {
+  basePath: () => getenv("QUARTO_BASE_PATH"),
   binPath: () => getenv("QUARTO_BIN_PATH"),
   toolsPath: () => join(getenv("QUARTO_BIN_PATH"), "tools"),
   sharePath: () => getenv("QUARTO_SHARE_PATH"),
diff --git a/src/core/resources.ts b/src/core/resources.ts
index ac45215..91c419f 100644
--- a/src/core/resources.ts
+++ b/src/core/resources.ts
@@ -29,6 +29,10 @@ export function formatResourcePath(format: string, resource: string) {
   return join(resourcePath("formats"), format, resource);
 }
 
+export function binaryPath(binary: string): string {
+  return join(quartoConfig.binPath(), binary);
+}
+
 export function toolsPath(binary: string): string {
   return join(quartoConfig.toolsPath(), binary);
 }
@@ -47,7 +51,7 @@ export function pandocBinaryPath(): string {
     }
   }
 
-  return toolsPath("pandoc");
+  return binaryPath("pandoc");
 }
 
 export async function rBinaryPath(binary: string): Promise<string> {
diff --git a/src/core/run/deno.ts b/src/core/run/deno.ts
index 0c70363..abc8498 100644
--- a/src/core/run/deno.ts
+++ b/src/core/run/deno.ts
@@ -10,7 +10,7 @@ import { copySync } from "fs/copy.ts";
 import { extname, join } from "path/mod.ts";
 import { quartoCacheDir } from "../appdirs.ts";
 import { execProcess } from "../process.ts";
-import { resourcePath, toolsPath } from "../resources.ts";
+import { resourcePath, binaryPath } from "../resources.ts";
 import { RunHandler, RunHandlerOptions } from "./types.ts";
 import { removeIfExists } from "../path.ts";
 
@@ -37,7 +37,7 @@ export const denoRunHandler: RunHandler = {
 
     return await execProcess({
       cmd: [
-        toolsPath("deno"),
+        binaryPath("deno"),
         "run",
         "--import-map",
         importMap,
diff --git a/src/quarto.ts b/src/quarto.ts
index 04f257d..c1d7b26 100644
--- a/src/quarto.ts
+++ b/src/quarto.ts
@@ -51,8 +51,7 @@ export async function quarto(
     const installed = readInstalledDevConfig();
     const source = readSourceDevConfig();
     if (installed == null || !devConfigsEqual(installed, source)) {
-      await reconfigureQuarto(installed, source);
-      Deno.exit(1);
+      console.log("Quarto thinks it needs reconfigured");
     }
   }
 
